[
    {
        "id": "4a5a37c77796c075",
        "type": "tab",
        "label": "Energy management",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b315e011322998d9",
        "type": "junction",
        "z": "4a5a37c77796c075",
        "x": 940,
        "y": 380,
        "wires": [
            [
                "a3662e16034d98ba",
                "ee0e9ae87e3471d5"
            ]
        ]
    },
    {
        "id": "252a7d52295635ab",
        "type": "junction",
        "z": "4a5a37c77796c075",
        "x": 1120,
        "y": 220,
        "wires": [
            [
                "0412263437e2161b",
                "dc2aa9229c63f921"
            ]
        ]
    },
    {
        "id": "9a2597470c476c0e",
        "type": "junction",
        "z": "4a5a37c77796c075",
        "x": 1160,
        "y": 780,
        "wires": [
            [
                "a499b2561bb70172",
                "06b1c6b0764692d6"
            ]
        ]
    },
    {
        "id": "99b83e7c7e043eea",
        "type": "junction",
        "z": "4a5a37c77796c075",
        "x": 1160,
        "y": 880,
        "wires": [
            [
                "0f4108dd84e1905c",
                "f80378569a2d0bbb"
            ]
        ]
    },
    {
        "id": "victron-client-id",
        "type": "victron-client"
    },
    {
        "id": "12f84977c9ed308e",
        "type": "position-config",
        "name": "",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": "99",
        "timeZoneDST": "0",
        "stateTimeFormat": "3",
        "stateDateFormat": "12",
        "contextStore": ""
    },
    {
        "id": "189942093603e6de",
        "type": "position-config",
        "name": "",
        "isValide": "true",
        "longitude": "0",
        "latitude": "0",
        "angleType": "deg",
        "timeZoneOffset": 99,
        "timeZoneDST": 0,
        "stateTimeFormat": "3",
        "stateDateFormat": "12",
        "contextStore": ""
    },
    {
        "id": "06b1c6b0764692d6",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Actual GridSetPoint",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1290,
        "y": 740,
        "wires": []
    },
    {
        "id": "49aeb845a96ee7c8",
        "type": "victron-input-system",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.system",
        "path": "/Ac/Consumption/L1/Power",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Ac/Consumption/L1/Power",
            "type": "float",
            "name": "AC Consumption L1 (W)"
        },
        "initial": "",
        "name": "",
        "x": 190,
        "y": 580,
        "wires": [
            [
                "94dea78017859763"
            ]
        ]
    },
    {
        "id": "ab2be4ddf9a8547b",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Consumption L1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "result",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 540,
        "wires": []
    },
    {
        "id": "3349d545667b7cfc",
        "type": "victron-input-system",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.system",
        "path": "/Dc/Battery/State",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Dc/Battery/State",
            "type": "enum",
            "name": "Battery state",
            "enum": {
                "0": "idle",
                "1": "charging",
                "2": "discharging"
            }
        },
        "initial": "",
        "name": "",
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "828dfa6e68477e11"
            ]
        ]
    },
    {
        "id": "7ef190d018699bdb",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Battery state",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 1040,
        "wires": []
    },
    {
        "id": "9bcf499ea7b52634",
        "type": "victron-input-vebus",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.vebus.ttyUSB2",
        "path": "/Ac/ActiveIn/ActiveInput",
        "serviceObj": {
            "service": "com.victronenergy.vebus.ttyUSB2",
            "name": "MultiPlus 12/800/35-16",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/ActiveInput",
                    "type": "enum",
                    "name": "Active input",
                    "enum": {
                        "0": "AC Input 1",
                        "1": "AC Input 2",
                        "240": "Disconnected"
                    }
                },
                {
                    "path": "/Ac/ActiveIn/CurrentLimit",
                    "type": "float",
                    "name": "Active input current limit (A)"
                },
                {
                    "path": "/Ac/ActiveIn/L1/F",
                    "type": "float",
                    "name": "Input frequency 1 (Hz)"
                },
                {
                    "path": "/Ac/ActiveIn/L1/I",
                    "type": "float",
                    "name": "Input current phase 1 (A)"
                },
                {
                    "path": "/Ac/ActiveIn/L1/P",
                    "type": "float",
                    "name": "Input power 1 (W)"
                },
                {
                    "path": "/Ac/ActiveIn/L1/V",
                    "type": "float",
                    "name": "Input voltage phase 1 (VAC)"
                },
                {
                    "path": "/Ac/ActiveIn/L2/F",
                    "type": "float",
                    "name": "Input frequency 2 (Hz)"
                },
                {
                    "path": "/Ac/ActiveIn/L2/I",
                    "type": "float",
                    "name": "Input current phase 2 (A)"
                },
                {
                    "path": "/Ac/ActiveIn/L2/P",
                    "type": "float",
                    "name": "Input power 2 (W)"
                },
                {
                    "path": "/Ac/ActiveIn/L2/V",
                    "type": "float",
                    "name": "Input voltage phase 2 (VAC)"
                },
                {
                    "path": "/Ac/ActiveIn/L3/F",
                    "type": "float",
                    "name": "Input frequency 3 (Hz)"
                },
                {
                    "path": "/Ac/ActiveIn/L3/I",
                    "type": "float",
                    "name": "Input current phase 3 (A)"
                },
                {
                    "path": "/Ac/ActiveIn/L3/P",
                    "type": "float",
                    "name": "Input power 3 (W)"
                },
                {
                    "path": "/Ac/ActiveIn/L3/V",
                    "type": "float",
                    "name": "Input voltage phase 3 (VAC)"
                },
                {
                    "path": "/Ac/In/1/CurrentLimit",
                    "type": "float",
                    "name": "Input 1 current limit (A)"
                },
                {
                    "path": "/Ac/In/1/CurrentLimitIsAdjustable",
                    "type": "enum",
                    "name": "Input 1 current limit is adjustable",
                    "enum": {
                        "0": "No",
                        "1": "Yes"
                    }
                },
                {
                    "path": "/Ac/In/2/CurrentLimit",
                    "type": "float",
                    "name": "Input 2 current limit (A)"
                },
                {
                    "path": "/Ac/In/2/CurrentLimitIsAdjustable",
                    "type": "enum",
                    "name": "Input 2 current limit is adjustable",
                    "enum": {
                        "0": "No",
                        "1": "Yes"
                    }
                },
                {
                    "path": "/Ac/NumberOfPhases",
                    "type": "float",
                    "name": "Phase count"
                },
                {
                    "path": "/Ac/Out/L1/F",
                    "type": "float",
                    "name": "Output frequency (Hz)"
                },
                {
                    "path": "/Ac/Out/L1/I",
                    "type": "float",
                    "name": "Output current phase 1 (A)"
                },
                {
                    "path": "/Ac/Out/L1/P",
                    "type": "float",
                    "name": "Output power 1 (W)"
                },
                {
                    "path": "/Ac/Out/L1/V",
                    "type": "float",
                    "name": "Output voltage phase 1 (VAC)"
                },
                {
                    "path": "/Ac/Out/L2/I",
                    "type": "float",
                    "name": "Output current phase 2 (A)"
                },
                {
                    "path": "/Ac/Out/L2/P",
                    "type": "float",
                    "name": "Output power 2 (W)"
                },
                {
                    "path": "/Ac/Out/L2/V",
                    "type": "float",
                    "name": "Output voltage phase 2 (VAC)"
                },
                {
                    "path": "/Ac/Out/L3/I",
                    "type": "float",
                    "name": "Output current phase 3 (A)"
                },
                {
                    "path": "/Ac/Out/L3/P",
                    "type": "float",
                    "name": "Output power 3 (W)"
                },
                {
                    "path": "/Ac/Out/L3/V",
                    "type": "float",
                    "name": "Output voltage phase 3 (VAC)"
                },
                {
                    "path": "/Ac/State/IgnoreAcIn1",
                    "type": "enum",
                    "name": "AC input 1 ignored",
                    "enum": {
                        "0": "AC input not ignored",
                        "1": "AC input ignored"
                    }
                },
                {
                    "path": "/Alarms/GridLost",
                    "type": "enum",
                    "name": "Grid lost alarm",
                    "enum": {
                        "0": "Ok",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/HighTemperature",
                    "type": "enum",
                    "name": "Temperature",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L1/HighTemperature",
                    "type": "enum",
                    "name": "Temperature alarm L1",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L1/LowBattery",
                    "type": "enum",
                    "name": "Low battery alarm L1",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L1/Overload",
                    "type": "enum",
                    "name": "Overload alarm L1",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L1/Ripple",
                    "type": "enum",
                    "name": "Ripple alarm L1",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L2/HighTemperature",
                    "type": "enum",
                    "name": "Temperature alarm L2",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L2/LowBattery",
                    "type": "enum",
                    "name": "Low battery alarm L2",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L2/Overload",
                    "type": "enum",
                    "name": "Overload alarm L2",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L2/Ripple",
                    "type": "enum",
                    "name": "Ripple alarm L2",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L3/HighTemperature",
                    "type": "enum",
                    "name": "Temperature alarm L3",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L3/LowBattery",
                    "type": "enum",
                    "name": "Low battery alarm L3",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L3/Overload",
                    "type": "enum",
                    "name": "Overload alarm L3",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/L3/Ripple",
                    "type": "enum",
                    "name": "Ripple alarm L3",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/LowBattery",
                    "type": "enum",
                    "name": "Low battery",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/Overload",
                    "type": "enum",
                    "name": "Overload",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/PhaseRotation",
                    "type": "enum",
                    "name": "Phase Rotation",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning"
                    }
                },
                {
                    "path": "/Alarms/TemperatureSensor",
                    "type": "enum",
                    "name": "Temperatur sensor alarm",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Alarms/VoltageSensor",
                    "type": "enum",
                    "name": "Voltage sensor alarm",
                    "enum": {
                        "0": "Ok",
                        "1": "Warning",
                        "2": "Alarm"
                    }
                },
                {
                    "path": "/Bms/AllowToCharge",
                    "type": "enum",
                    "name": "BMS allows battery to be charged",
                    "enum": {
                        "0": "No",
                        "1": "Yes"
                    }
                },
                {
                    "path": "/Bms/AllowToDischarge",
                    "type": "enum",
                    "name": "BMS allows battery to be discharged",
                    "enum": {
                        "0": "No",
                        "1": "Yes"
                    }
                },
                {
                    "path": "/Bms/BmsExpected",
                    "type": "enum",
                    "name": "VE.Bus BMS is expected",
                    "enum": {
                        "0": "No",
                        "1": "Yes"
                    }
                },
                {
                    "path": "/Bms/Error",
                    "type": "enum",
                    "name": "VE.Bus BMS error",
                    "enum": {
                        "0": "No",
                        "1": "Yes"
                    }
                },
                {
                    "path": "/Dc/0/Current",
                    "type": "float",
                    "name": "Current (A)"
                },
                {
                    "path": "/Dc/0/Temperature",
                    "type": "float",
                    "name": "Temperature (C)"
                },
                {
                    "path": "/Dc/0/Voltage",
                    "type": "float",
                    "name": "Voltage (V)"
                },
                {
                    "path": "/Energy/AcIn1ToAcOut",
                    "type": "float",
                    "name": "Energy ACIn1 to AcOut (kWh)"
                },
                {
                    "path": "/Energy/AcIn1ToInverter",
                    "type": "float",
                    "name": "Energy AcIn1 to Inverter (kWh)"
                },
                {
                    "path": "/Energy/AcIn2ToAcOut",
                    "type": "float",
                    "name": "Energy ACIn2 to AcOut (kWh)"
                },
                {
                    "path": "/Energy/AcIn2ToInverter",
                    "type": "float",
                    "name": "Energy ACIn2 to Inverter (kWh)"
                },
                {
                    "path": "/Energy/AcOutToAcIn1",
                    "type": "float",
                    "name": "Energy AcOut to AcIn1 (kWh)"
                },
                {
                    "path": "/Energy/AcOutToAcIn2",
                    "type": "float",
                    "name": "Energy AcOut to AcIn2 (kWh)"
                },
                {
                    "path": "/Energy/InverterToAcIn1",
                    "type": "float",
                    "name": "Energy Inverter to AcIn1 (kWh)"
                },
                {
                    "path": "/Energy/InverterToAcIn2",
                    "type": "float",
                    "name": "Energy Inverter to AcIn2 (kWh)"
                },
                {
                    "path": "/Energy/InverterToAcOut",
                    "type": "float",
                    "name": "Inverter To AcOut (kWh)"
                },
                {
                    "path": "/Energy/OutToInverter",
                    "type": "float",
                    "name": "AcOut to Inverter (kWh)"
                },
                {
                    "path": "/Hub4/FixSolarOffsetTo100mV",
                    "type": "enum",
                    "name": "Solar offset voltage",
                    "enum": {
                        "0": "OvervoltageFeedIn uses 1V offset",
                        "1": "OvervoltageFeedIn uses 0.1V offset"
                    }
                },
                {
                    "path": "/Hub4/Sustain",
                    "type": "enum",
                    "name": "Sustain active",
                    "enum": {
                        "0": "Sustain inactive",
                        "1": "Sustain active"
                    }
                },
                {
                    "path": "/Hub4/TargetPowerIsMaxFeedIn",
                    "type": "enum",
                    "name": "AcPowerSetpoint acts as feed-in limit",
                    "enum": {
                        "0": "AcPowerSetpoint interpreted normally",
                        "1": "AcPowerSetpoint is OvervoltageFeedIn limit"
                    }
                },
                {
                    "path": "/Mode",
                    "type": "enum",
                    "name": "Switch Position",
                    "enum": {
                        "1": "Charger Only",
                        "2": "Inverter Only",
                        "3": "On",
                        "4": "Off"
                    }
                },
                {
                    "path": "/ModeIsAdjustable",
                    "type": "enum",
                    "name": "Mode is adjustable",
                    "enum": {
                        "0": "No",
                        "1": "Yes"
                    }
                },
                {
                    "path": "/Soc",
                    "type": "float",
                    "name": "VE.Bus state of charge (%)"
                },
                {
                    "path": "/State",
                    "type": "enum",
                    "name": "VE.Bus state",
                    "enum": {
                        "0": "Off",
                        "1": "Low Power",
                        "2": "Fault",
                        "3": "Bulk",
                        "4": "Absorption",
                        "5": "Float",
                        "6": "Storage",
                        "7": "Equalize",
                        "8": "Passthru",
                        "9": "Inverting",
                        "10": "Power assist",
                        "11": "Power supply",
                        "252": "Bulk protect"
                    }
                },
                {
                    "path": "/VebusError",
                    "type": "enum",
                    "name": "VE.Bus Error",
                    "enum": {
                        "0": "No error",
                        "1": "VE.Bus Error 1: Device is switched off because one of the other phases in the system has switched off",
                        "2": "VE.Bus Error 2: New and old types MK2 are mixed in the system",
                        "3": "VE.Bus Error 3: Not all, or more than, the expected devices were found in the system",
                        "4": "VE.Bus Error 4: No other device whatsoever detected",
                        "5": "VE.Bus Error 5: Overvoltage on AC-out",
                        "6": "VE.Bus Error 6: Error in DDC Program",
                        "7": "VE.Bus Error 7:  BMS connected, which requires an Assistant, but no assistant found",
                        "8": "VE.Bus Error 8: Ground relay test failed",
                        "9": "VE.Bus Error 9",
                        "10": "VE.Bus Error 10: System time synchronisation problem occurred",
                        "11": "VE.Bus Error 11: Relay test fault",
                        "12": "VE.Bus Error 12",
                        "13": "VE.Bus Error 13",
                        "14": "VE.Bus Error 14: Device cannot transmit data",
                        "15": "VE.Bus Error 15",
                        "16": "VE.Bus Error 16: Awaiting configuration or dongle missing",
                        "17": "VE.Bus Error 17: Phase master missing",
                        "18": "VE.Bus Error 18: AC Overvoltage on the output of a slave has occurred while already switched off",
                        "19": "VE.Bus Error 19",
                        "20": "VE.Bus Error 20",
                        "21": "VE.Bus Error 21",
                        "22": "VE.Bus Error 22: This device cannot function as slave",
                        "23": "VE.Bus Error 23",
                        "24": "VE.Bus Error 24: Switch-over system protection initiated",
                        "25": "VE.Bus Error 25: Firmware incompatibility. The firmware of one of the connected device is not sufficiently up to date to operate in conjunction with this device",
                        "26": "VE.Bus Error 26: Internal error",
                        "27": "VE.Bus Error 27",
                        "28": "VE.Bus Error 28",
                        "29": "VE.Bus Error 29",
                        "30": "VE.Bus Error 30",
                        "31": "VE.Bus Error 31",
                        "32": "VE.Bus Error 32"
                    }
                }
            ]
        },
        "pathObj": {
            "path": "/Ac/ActiveIn/ActiveInput",
            "type": "enum",
            "name": "Active input",
            "enum": {
                "0": "AC Input 1",
                "1": "AC Input 2",
                "240": "Disconnected"
            }
        },
        "initial": "",
        "name": "",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "53846ca3483ba858"
            ]
        ]
    },
    {
        "id": "ee0e9ae87e3471d5",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Active input",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 340,
        "wires": []
    },
    {
        "id": "bdc3cb68faaa2efc",
        "type": "victron-output-ess",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.settings",
        "path": "/Settings/CGwacs/AcPowerSetPoint",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "ESS System Settings",
            "paths": [
                {
                    "path": "/Settings/CGwacs/AcPowerSetPoint",
                    "type": "integer",
                    "name": "Grid set-point (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
                    "type": "integer",
                    "name": "Minimum Discharge SOC (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/State",
                    "type": "enum",
                    "name": "ESS state",
                    "enum": {
                        "1": "BatteryLife enabled (GUI controlled)",
                        "2": "Optimized Mode /w BatteryLife: self consumption",
                        "3": "Optimized Mode /w BatteryLife: self consumption, SoC exceeds 85%",
                        "4": "Optimized Mode /w BatteryLife: self consumption, SoC at 100%",
                        "5": "Optimized Mode /w BatteryLife: SoC below dynamic SoC limit",
                        "6": "Optimized Mode /w BatteryLife: SoC has been below SoC limit for more than 24 hours. Charging the battery (5A)",
                        "7": "Optimized Mode /w BatteryLife: Inverter/Charger is in sustain mode",
                        "8": "Optimized Mode /w BatteryLife: recharging, SoC dropped by 5% or more below the minimum SoC",
                        "9": "'Keep batteries charged' mode is enabled",
                        "10": "Optimized mode w/o BatteryLife: self consumption, SoC at or above minimum SoC",
                        "11": "Optimized mode w/o BatteryLife: self consumption, SoC is below minimum SoC",
                        "12": "Optimized mode w/o BatteryLife: recharging, SoC dropped by 5% or more below minimum SoC"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/Hub4Mode",
                    "type": "enum",
                    "name": "ESS mode",
                    "enum": {
                        "1": "Optimized mode or 'keep batteries charged' and phase compensation enabled",
                        "2": "Optimized mode or 'keep batteries charged' and phase compensation disabled",
                        "3": "External control"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePower",
                    "type": "integer",
                    "name": "Max inverter power (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxFeedInPower",
                    "type": "integer",
                    "name": "Maximum System Grid Feed In (W)",
                    "remarks": "<ul><li>-1: No limit</li><li> &gt;=0: limited system feed-in</li></ul><p>Applies to DC-coupled and AC-coupled feed-in.</p>",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/OvervoltageFeedIn",
                    "type": "enum",
                    "name": "Feed excess DC-coupled PV into grid",
                    "enum": {
                        "0": "Don’t feed excess DC-tied PV into grid",
                        "1": "Feed excess DC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/PreventFeedback",
                    "type": "enum",
                    "name": "Don’t feed excess AC-coupled PV into grid",
                    "enum": {
                        "0": "Feed excess AC-tied PV into grid",
                        "1": "Don’t feed excess AC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeCurrent",
                    "type": "float",
                    "name": "Charge current limit (A)",
                    "writable": true
                }
            ]
        },
        "pathObj": {
            "path": "/Settings/CGwacs/AcPowerSetPoint",
            "type": "integer",
            "name": "Grid set-point (W)",
            "writable": true
        },
        "initial": "",
        "name": "",
        "x": 1400,
        "y": 1400,
        "wires": []
    },
    {
        "id": "de8675a13833d79c",
        "type": "victron-input-ess",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.settings",
        "path": "/Settings/CGwacs/AcPowerSetPoint",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "ESS System Settings",
            "paths": [
                {
                    "path": "/Settings/CGwacs/AcPowerSetPoint",
                    "type": "integer",
                    "name": "Grid set-point (W)"
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
                    "type": "integer",
                    "name": "Minimum Discharge SOC (%)"
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/SocLimit",
                    "type": "integer",
                    "name": "Active SOC limit (%)"
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/State",
                    "type": "enum",
                    "name": "ESS state",
                    "enum": {
                        "1": "BatteryLife enabled (GUI controlled)",
                        "2": "Optimized Mode /w BatteryLife: self consumption",
                        "3": "Optimized Mode /w BatteryLife: self consumption, SoC exceeds 85%",
                        "4": "Optimized Mode /w BatteryLife: self consumption, SoC at 100%",
                        "5": "Optimized Mode /w BatteryLife: SoC below dynamic SoC limit",
                        "6": "Optimized Mode /w BatteryLife: SoC has been below SoC limit for more than 24 hours. Charging the battery (5A)",
                        "7": "Optimized Mode /w BatteryLife: Inverter/Charger is in sustain mode",
                        "8": "Optimized Mode /w BatteryLife: recharging, SoC dropped by 5% or more below the minimum SoC",
                        "9": "'Keep batteries charged' mode is enabled",
                        "10": "Optimized mode w/o BatteryLife: self consumption, SoC at or above minimum SoC",
                        "11": "Optimized mode w/o BatteryLife: self consumption, SoC is below minimum SoC",
                        "12": "Optimized mode w/o BatteryLife: recharging, SoC dropped by 5% or more below minimum SoC"
                    }
                },
                {
                    "path": "/Settings/CGwacs/Hub4Mode",
                    "type": "enum",
                    "name": "ESS mode",
                    "enum": {
                        "1": "Optimized mode or 'keep batteries charged' and phase compensation enabled",
                        "2": "Optimized mode or 'keep batteries charged' and phase compensation disabled",
                        "3": "External control"
                    }
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePower",
                    "type": "integer",
                    "name": "Max inverter power (W)"
                },
                {
                    "path": "/Settings/CGwacs/OvervoltageFeedIn",
                    "type": "enum",
                    "name": "Feed excess DC-coupled PV into grid",
                    "enum": {
                        "0": "Don’t feed excess DC-tied PV into grid",
                        "1": "Feed excess DC-tied PV into the grid"
                    }
                },
                {
                    "path": "/Settings/CGwacs/PreventFeedback",
                    "type": "enum",
                    "name": "Don’t feed excess AC-coupled PV into grid",
                    "enum": {
                        "0": "Feed excess AC-tied PV into grid",
                        "1": "Don’t feed excess AC-tied PV into the grid"
                    }
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeCurrent",
                    "type": "float",
                    "name": "DVCC Charge current limit (A)"
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeVoltage",
                    "type": "float",
                    "name": "DVCC Maximum charge voltage (V)"
                }
            ]
        },
        "pathObj": {
            "path": "/Settings/CGwacs/AcPowerSetPoint",
            "type": "integer",
            "name": "Grid set-point (W)"
        },
        "initial": "",
        "name": "",
        "x": 160,
        "y": 780,
        "wires": [
            [
                "8779777fc2404182"
            ]
        ]
    },
    {
        "id": "37cc1f8631b75402",
        "type": "victron-input-ess",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.settings",
        "path": "/Settings/CGwacs/MaxDischargePower",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "ESS System Settings",
            "paths": [
                {
                    "path": "/Settings/CGwacs/AcPowerSetPoint",
                    "type": "integer",
                    "name": "Grid set-point (W)"
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
                    "type": "integer",
                    "name": "Minimum Discharge SOC (%)"
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/SocLimit",
                    "type": "integer",
                    "name": "Active SOC limit (%)"
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/State",
                    "type": "enum",
                    "name": "ESS state",
                    "enum": {
                        "1": "BatteryLife enabled (GUI controlled)",
                        "2": "Optimized Mode /w BatteryLife: self consumption",
                        "3": "Optimized Mode /w BatteryLife: self consumption, SoC exceeds 85%",
                        "4": "Optimized Mode /w BatteryLife: self consumption, SoC at 100%",
                        "5": "Optimized Mode /w BatteryLife: SoC below dynamic SoC limit",
                        "6": "Optimized Mode /w BatteryLife: SoC has been below SoC limit for more than 24 hours. Charging the battery (5A)",
                        "7": "Optimized Mode /w BatteryLife: Inverter/Charger is in sustain mode",
                        "8": "Optimized Mode /w BatteryLife: recharging, SoC dropped by 5% or more below the minimum SoC",
                        "9": "'Keep batteries charged' mode is enabled",
                        "10": "Optimized mode w/o BatteryLife: self consumption, SoC at or above minimum SoC",
                        "11": "Optimized mode w/o BatteryLife: self consumption, SoC is below minimum SoC",
                        "12": "Optimized mode w/o BatteryLife: recharging, SoC dropped by 5% or more below minimum SoC"
                    }
                },
                {
                    "path": "/Settings/CGwacs/Hub4Mode",
                    "type": "enum",
                    "name": "ESS mode",
                    "enum": {
                        "1": "Optimized mode or 'keep batteries charged' and phase compensation enabled",
                        "2": "Optimized mode or 'keep batteries charged' and phase compensation disabled",
                        "3": "External control"
                    }
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePower",
                    "type": "integer",
                    "name": "Max inverter power (W)"
                },
                {
                    "path": "/Settings/CGwacs/OvervoltageFeedIn",
                    "type": "enum",
                    "name": "Feed excess DC-coupled PV into grid",
                    "enum": {
                        "0": "Don’t feed excess DC-tied PV into grid",
                        "1": "Feed excess DC-tied PV into the grid"
                    }
                },
                {
                    "path": "/Settings/CGwacs/PreventFeedback",
                    "type": "enum",
                    "name": "Don’t feed excess AC-coupled PV into grid",
                    "enum": {
                        "0": "Feed excess AC-tied PV into grid",
                        "1": "Don’t feed excess AC-tied PV into the grid"
                    }
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeCurrent",
                    "type": "float",
                    "name": "DVCC Charge current limit (A)"
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeVoltage",
                    "type": "float",
                    "name": "DVCC Maximum charge voltage (V)"
                }
            ]
        },
        "pathObj": {
            "path": "/Settings/CGwacs/MaxDischargePower",
            "type": "integer",
            "name": "Max inverter power (W)"
        },
        "initial": "",
        "name": "",
        "x": 170,
        "y": 880,
        "wires": [
            [
                "41b863234441d28c"
            ]
        ]
    },
    {
        "id": "f80378569a2d0bbb",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Actual max inverter power",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 840,
        "wires": []
    },
    {
        "id": "b3eca7e2d707a356",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "255",
        "payloadType": "num",
        "x": 390,
        "y": 160,
        "wires": [
            [
                "26fb397d52498355"
            ]
        ]
    },
    {
        "id": "f37b3d058822ad24",
        "type": "trigger",
        "z": "4a5a37c77796c075",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "num",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "3",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 990,
        "y": 180,
        "wires": [
            [
                "252a7d52295635ab"
            ]
        ]
    },
    {
        "id": "cde5ceb26b85cabe",
        "type": "change",
        "z": "4a5a37c77796c075",
        "name": "Reset",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "3",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 240,
        "wires": [
            [
                "f37b3d058822ad24"
            ]
        ]
    },
    {
        "id": "1b7ac2a196531c19",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 350,
        "y": 260,
        "wires": [
            [
                "53846ca3483ba858"
            ]
        ]
    },
    {
        "id": "1f18e3961cde60a3",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 350,
        "y": 300,
        "wires": [
            [
                "53846ca3483ba858"
            ]
        ]
    },
    {
        "id": "537823f0f2e27080",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "10",
        "topic": "",
        "payload": "240",
        "payloadType": "num",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "53846ca3483ba858"
            ]
        ]
    },
    {
        "id": "db0738d2ac34b73b",
        "type": "trigger",
        "z": "4a5a37c77796c075",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "num",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "240",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 850,
        "y": 340,
        "wires": [
            [
                "b315e011322998d9"
            ]
        ]
    },
    {
        "id": "84ff62982fdbd7b0",
        "type": "switch",
        "z": "4a5a37c77796c075",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "255",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "f37b3d058822ad24"
            ],
            [
                "f37b3d058822ad24"
            ],
            [
                "cde5ceb26b85cabe",
                "252a7d52295635ab"
            ],
            [
                "cde5ceb26b85cabe",
                "252a7d52295635ab"
            ]
        ]
    },
    {
        "id": "06215a1e9f6b0c85",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 390,
        "y": 40,
        "wires": [
            [
                "26fb397d52498355"
            ]
        ]
    },
    {
        "id": "488dec18c9538d4e",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "26fb397d52498355"
            ]
        ]
    },
    {
        "id": "7203fb1792dcbe02",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "10",
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "26fb397d52498355"
            ]
        ]
    },
    {
        "id": "acfe2f55f87a2423",
        "type": "switch",
        "z": "4a5a37c77796c075",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "240",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 690,
        "y": 380,
        "wires": [
            [
                "db0738d2ac34b73b"
            ],
            [
                "db0738d2ac34b73b"
            ],
            [
                "db0738d2ac34b73b",
                "b315e011322998d9"
            ]
        ]
    },
    {
        "id": "2e4dfad4bfd56be3",
        "type": "victron-input-solarcharger",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.solarcharger.ttyUSB0",
        "path": "/MppOperationMode",
        "serviceObj": {
            "service": "com.victronenergy.solarcharger.ttyUSB0",
            "name": "BlueSolar Charger MPPT 100/50 rev3",
            "paths": [
                {
                    "path": "/Dc/0/Current",
                    "type": "float",
                    "name": "Current (A)"
                },
                {
                    "path": "/Dc/0/Voltage",
                    "type": "float",
                    "name": "Voltage (V)"
                },
                {
                    "path": "/ErrorCode",
                    "type": "enum",
                    "name": "Error code",
                    "enum": {
                        "0": "No error",
                        "1": "#1 - Battery temperature too high",
                        "2": "#2 - Battery voltage too high",
                        "3": "#3 - Battery temperature sensor miswired (+)",
                        "4": "#4 - Battery temperature sensor miswired (-)",
                        "5": "#5 - Battery temperature sensor disconnected",
                        "6": "#6 - Battery voltage sense miswired (+)",
                        "7": "#7 - Battery voltage sense miswired (-)",
                        "8": "#8 - Battery voltage sense disconnected",
                        "9": "#9 - Battery voltage wire losses too high",
                        "10": "#10 - Battery voltage too low",
                        "11": "#11 - Battery ripple voltage on terminals too high",
                        "12": "#12 - Battery low state of charge",
                        "13": "#13 - Battery mid-point voltage issue",
                        "14": "#14 - Battery temperature too low",
                        "17": "#17 - Charger temperature too high",
                        "18": "#18 - Charger over-current",
                        "19": "#19 - Charger current polarity reversed",
                        "20": "#20 - Max Bulk-time exceeded",
                        "21": "#21 - Charger current sensor issue",
                        "22": "#22 - Temperature sensor miswired",
                        "23": "#23 - Charger temperature sensor disconnected",
                        "24": "#24 - Charger internal fan not detected",
                        "25": "#25 - Charger internal fan over-current",
                        "26": "#26 - Charger terminal overheated",
                        "27": "#27 - Charger short circuit",
                        "28": "#28 - Charger issue with power stage",
                        "29": "#29 - Over-charge protection",
                        "31": "#31 - Input voltage out of range",
                        "32": "#32 - Input voltage too low",
                        "33": "#33 - Input voltage too high",
                        "34": "#34 - PV over current",
                        "35": "#35 - Input excessive power",
                        "36": "#36 - Input polarity issue",
                        "37": "#37 - Input voltage absent (mains removed, fuse blown?)",
                        "38": "#38 - Input shutdown due to battery over-voltage",
                        "39": "#39 - Input shutdown due to battery over-voltage",
                        "40": "#40 - Internal failure (PV Input failed to shutdown)",
                        "41": "#41 - Inverter shutdown (panel isolation resistance too low)",
                        "42": "#42 - Inverter shutdown (ground current too high: >30mA)",
                        "43": "#43 - Inverter shutdown (voltage over ground relay too high)",
                        "50": "#50 - Inverter overload (iit protection)",
                        "51": "#51 - Inverter temperature too high",
                        "52": "#52 - Inverter excessive current",
                        "53": "#53 - Inverter dc level (internal dc rail voltage)",
                        "54": "#54 - Inverter ac level (output voltage not ok)",
                        "55": "#55 - Inverter dc fail (dc on output)",
                        "56": "#56 - Inverter ac fail (shape wrong)*/",
                        "57": "#57 - Inverter ac on output (inverter only)",
                        "58": "#58 - Inverter bridge fault (hardware signal)",
                        "59": "#59 - ACIN1 relay test fault",
                        "60": "#60 - ACIN2 relay test fault",
                        "65": "#65 - Device disappeared during parallel operation (broken cable?)",
                        "66": "#66 - Incompatible device encountered for parallel operation (e.g. old firmware/different settings)",
                        "67": "#67 - No BMS",
                        "68": "#68 - Network misconfigured",
                        "113": "#113 - Non-volatile storage write error",
                        "114": "#114 - CPU temperature to high",
                        "115": "#115 - CAN/SCI communication lost (when critical)",
                        "116": "#116 - Calibration data lost",
                        "117": "#117 - Incompatible firmware encountered",
                        "118": "#118 - Incompatible hardware encountered",
                        "119": "#119 - Settings data lost",
                        "120": "#120 - Reference voltage failure",
                        "121": "#121 - Tester fail",
                        "122": "#122 - Non-volatile history data invalid/corrupted",
                        "200": "#200 - Internal error",
                        "201": "#201 - Internal error",
                        "203": "#203 - Internal error",
                        "205": "#205 - Internal error",
                        "212": "#212 - Internal error",
                        "215": "#215 - Internal error"
                    }
                },
                {
                    "path": "/History/Daily/0/MaxPower",
                    "type": "float",
                    "name": "Maximum charge power today (W)"
                },
                {
                    "path": "/History/Daily/0/Yield",
                    "type": "float",
                    "name": "Yield today (kWh)"
                },
                {
                    "path": "/History/Daily/1/MaxPower",
                    "type": "float",
                    "name": "Maximum charge power yesterday (W)"
                },
                {
                    "path": "/History/Daily/1/Yield",
                    "type": "float",
                    "name": "Yield yesterday (kWh)"
                },
                {
                    "path": "/Load/State",
                    "type": "enum",
                    "name": "Load state",
                    "enum": {
                        "0": "Off",
                        "1": "On"
                    }
                },
                {
                    "path": "/Mode",
                    "type": "enum",
                    "name": "Charger on/off",
                    "enum": {
                        "1": "On",
                        "4": "Off"
                    }
                },
                {
                    "path": "/MppOperationMode",
                    "type": "enum",
                    "name": "MPP operation mode",
                    "enum": {
                        "0": "Off",
                        "1": "Voltage or current limited",
                        "2": "MPPT Tracker active",
                        "255": "Not available"
                    }
                },
                {
                    "path": "/Pv/V",
                    "type": "float",
                    "name": "PV voltage"
                },
                {
                    "path": "/State",
                    "type": "enum",
                    "name": "Charge state",
                    "enum": {
                        "0": "Off",
                        "2": "Fault",
                        "3": "Bulk",
                        "4": "Absorption",
                        "5": "Float",
                        "6": "Storage",
                        "7": "Equalize",
                        "245": "Off",
                        "247": "Equalize",
                        "252": "Ext. Control"
                    }
                },
                {
                    "path": "/Yield/Power",
                    "type": "float",
                    "name": "PV Power (W)"
                },
                {
                    "path": "/Yield/System",
                    "type": "string",
                    "name": "Yield since last update (kWh)"
                },
                {
                    "path": "/Yield/User",
                    "type": "string",
                    "name": "Yield since reset (kWh)"
                }
            ]
        },
        "pathObj": {
            "path": "/MppOperationMode",
            "type": "enum",
            "name": "MPP operation mode",
            "enum": {
                "0": "Off",
                "1": "Voltage or current limited",
                "2": "MPPT Tracker active",
                "255": "Not available"
            }
        },
        "initial": "",
        "name": "",
        "x": 220,
        "y": 200,
        "wires": [
            [
                "26fb397d52498355"
            ]
        ]
    },
    {
        "id": "dcc04381212778b7",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "Inverter power limit control",
        "func": "var SolarOperationMode = global.get(\"SolarOperationMode\");     // 0-Off  1-Voltage or current limited  2-MPPT Tracker active 255- Not available\nvar MultiPlusActiveInput = global.get(\"MultiPlusActiveInput\"); // 0-AC Input 1  1-AC Input 2  240-Disconnected\nvar MPPTpower = global.get(\"MPPTpower\");                       // MPPT power in watts\n//var BatterySOC = global.get(\"BatterySOC\");                     // Battery SOC in %\n//var BatteryState = global.get(\"BatteryState\");                 // 0-Idle  1-Charging  2-Discharging\nvar ActualGridsetpoint = global.get(\"ActualGridsetpoint\");     // ActualGridsetpoint in watts\nvar ConsumptionL1 = global.get(\"ConsumptionL1\");               // ConsumptionL1 in watts\n\nvar increment = 50;\nvar offset = 50;\nvar BatteryGoal = 40;                                            // Watts\n\n\nfunction round(number, increment, offset) \n{\n    //return Math.ceil((number - offset) / increment ) * increment + offset;         // Round up\n    return Math.floor(Math.abs(number - offset) / increment ) * increment + offset;  // Round down\n}\n\nfunction dynamicPowerLimit(MPPTpower, BatteryGoal)\n{\n    var PowerLimit = BatteryGoal + MPPTpower\n\n    return PowerLimit;\n}\n\n\n\nif (SolarOperationMode != null && MultiPlusActiveInput != null) // If input data NOT NULL\n{\n    if (MultiPlusActiveInput == 240)                            // If no ACin\n    {\n        return [{payload:2000},{payload:1000}];\n    }\n    else                                                        // If Acin is OK\n    {\n        if (SolarOperationMode == 0 || MPPTpower < 30 )                            // If SolarCharger OFF or MPPTpower < 30\n        {\n            return [{payload:50},null];\n        }\n        else if(SolarOperationMode == 1 & MPPTpower >= 30)                        // If SolarCharger LIMIT\n        {\n            return [{payload:1000},null];\n        }\n        else if(SolarOperationMode == 2 & MPPTpower >= 30)                        // If SolarCharger NO LIMIT\n        {\n            var ACload = ConsumptionL1 - ActualGridsetpoint\n            var DynamicLimit = dynamicPowerLimit(MPPTpower, BatteryGoal)\n            var result = round(DynamicLimit, increment, offset)\n            \n            if (DynamicLimit < ACload)                          // If Inverter power limit is less than ACloads\n            {\n                return [{payload:result},null];\n            }\n            else\n            {\n                return [{payload:1000},null];\n            }\n        }\n        else                                                    // If Solar charger NOT CONNECTED\n        {\n            return [{payload:1000},null]; \n        }\n    }\n}\nelse return [null,{payload:1000}];                              // If input data IS null\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1300,
        "wires": [
            [
                "5bc89a4ea9ad7892"
            ],
            [
                "b49ca7c47459696f"
            ]
        ]
    },
    {
        "id": "1a729234f314dcf8",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Function1 OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1240,
        "wires": []
    },
    {
        "id": "dc2aa9229c63f921",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "MPPT LIMIT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 180,
        "wires": []
    },
    {
        "id": "b4106693fa507fc5",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 1300,
        "wires": [
            [
                "dcc04381212778b7",
                "8d99f6a41dbd6fff"
            ]
        ]
    },
    {
        "id": "0412263437e2161b",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "MPPT operation Global Variable",
        "func": "global.set(\"SolarOperationMode\",msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "ccd9cb5425988fa2",
        "type": "victron-output-ess",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.settings",
        "path": "/Settings/CGwacs/MaxDischargePower",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "ESS System Settings",
            "paths": [
                {
                    "path": "/Settings/CGwacs/AcPowerSetPoint",
                    "type": "integer",
                    "name": "Grid set-point (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
                    "type": "integer",
                    "name": "Minimum Discharge SOC (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/State",
                    "type": "enum",
                    "name": "ESS state",
                    "enum": {
                        "1": "BatteryLife enabled (GUI controlled)",
                        "2": "Optimized Mode /w BatteryLife: self consumption",
                        "3": "Optimized Mode /w BatteryLife: self consumption, SoC exceeds 85%",
                        "4": "Optimized Mode /w BatteryLife: self consumption, SoC at 100%",
                        "5": "Optimized Mode /w BatteryLife: SoC below dynamic SoC limit",
                        "6": "Optimized Mode /w BatteryLife: SoC has been below SoC limit for more than 24 hours. Charging the battery (5A)",
                        "7": "Optimized Mode /w BatteryLife: Inverter/Charger is in sustain mode",
                        "8": "Optimized Mode /w BatteryLife: recharging, SoC dropped by 5% or more below the minimum SoC",
                        "9": "'Keep batteries charged' mode is enabled",
                        "10": "Optimized mode w/o BatteryLife: self consumption, SoC at or above minimum SoC",
                        "11": "Optimized mode w/o BatteryLife: self consumption, SoC is below minimum SoC",
                        "12": "Optimized mode w/o BatteryLife: recharging, SoC dropped by 5% or more below minimum SoC"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/Hub4Mode",
                    "type": "enum",
                    "name": "ESS mode",
                    "enum": {
                        "1": "Optimized mode or 'keep batteries charged' and phase compensation enabled",
                        "2": "Optimized mode or 'keep batteries charged' and phase compensation disabled",
                        "3": "External control"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePower",
                    "type": "integer",
                    "name": "Max inverter power (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxFeedInPower",
                    "type": "integer",
                    "name": "Maximum System Grid Feed In (W)",
                    "remarks": "<ul><li>-1: No limit</li><li> &gt;=0: limited system feed-in</li></ul><p>Applies to DC-coupled and AC-coupled feed-in.</p>",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/OvervoltageFeedIn",
                    "type": "enum",
                    "name": "Feed excess DC-coupled PV into grid",
                    "enum": {
                        "0": "Don’t feed excess DC-tied PV into grid",
                        "1": "Feed excess DC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/PreventFeedback",
                    "type": "enum",
                    "name": "Don’t feed excess AC-coupled PV into grid",
                    "enum": {
                        "0": "Feed excess AC-tied PV into grid",
                        "1": "Don’t feed excess AC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeCurrent",
                    "type": "float",
                    "name": "Charge current limit (A)",
                    "writable": true
                }
            ]
        },
        "pathObj": {
            "path": "/Settings/CGwacs/MaxDischargePower",
            "type": "integer",
            "name": "Max inverter power (W)",
            "writable": true
        },
        "initial": "",
        "name": "",
        "x": 1420,
        "y": 1300,
        "wires": []
    },
    {
        "id": "a3662e16034d98ba",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "MultiPlus Active Input",
        "func": "global.set(\"MultiPlusActiveInput\",msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "5bc89a4ea9ad7892",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 570,
        "y": 1280,
        "wires": [
            [
                "b888b5a965806ac9",
                "88659f50d1a33f0c"
            ]
        ]
    },
    {
        "id": "53846ca3483ba858",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 570,
        "y": 380,
        "wires": [
            [
                "acfe2f55f87a2423"
            ]
        ]
    },
    {
        "id": "26fb397d52498355",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "84ff62982fdbd7b0"
            ]
        ]
    },
    {
        "id": "57188d8eee2fc0a4",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "MPPTpower",
        "func": "//global.set(\"MPPTpower\",msg.payload);\nglobal.set(\"MPPTpower\",msg.result);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "d8d264231241e6cc",
        "type": "victron-input-system",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.system",
        "path": "/Dc/Pv/Power",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Dc/Pv/Power",
            "type": "float",
            "name": "MPPTs - power (W)"
        },
        "initial": "",
        "name": "",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "f4f8b8dd2e0cb4ee"
            ]
        ]
    },
    {
        "id": "af0719669df035e9",
        "type": "victron-input-system",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.system",
        "path": "/Dc/Battery/Soc",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Dc/Battery/Soc",
            "type": "float",
            "name": "Battery State of Charge (%)"
        },
        "initial": "",
        "name": "",
        "x": 200,
        "y": 980,
        "wires": [
            [
                "f954e7a258f3325d"
            ]
        ]
    },
    {
        "id": "f954e7a258f3325d",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1090,
        "y": 980,
        "wires": [
            [
                "1783604675d7966e",
                "1c7ca82e76a396c6"
            ]
        ]
    },
    {
        "id": "1783604675d7966e",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "Battery SOC",
        "func": "global.set(\"BatterySOC\",msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "1c7ca82e76a396c6",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Battery SOC",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 940,
        "wires": []
    },
    {
        "id": "f4f8b8dd2e0cb4ee",
        "type": "buffer-array",
        "z": "4a5a37c77796c075",
        "name": "",
        "bufferLen": "40",
        "startWhenFilled": true,
        "x": 790,
        "y": 480,
        "wires": [
            [
                "2f20b81795458b8f"
            ]
        ]
    },
    {
        "id": "2f20b81795458b8f",
        "type": "Data Analysis",
        "z": "4a5a37c77796c075",
        "name": "Average",
        "action": "avg",
        "columns": "",
        "outputs": 2,
        "outliersBase": "avg",
        "outliersStdDevs": "3",
        "term": "40",
        "keyProperty": "msg.topic",
        "dataProperty": "msg.payload",
        "dataProperties": [
            "msg.payload[0]",
            "msg.payload[1]"
        ],
        "x": 940,
        "y": 480,
        "wires": [
            [
                "f4b1a8990ea51849"
            ],
            []
        ]
    },
    {
        "id": "ada68576a1b3b8b2",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "MPPT power",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "result",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 440,
        "wires": []
    },
    {
        "id": "f4b1a8990ea51849",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1090,
        "y": 480,
        "wires": [
            [
                "ada68576a1b3b8b2",
                "57188d8eee2fc0a4"
            ]
        ]
    },
    {
        "id": "a95e38f44c913a8b",
        "type": "victron-output-settings",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.settings",
        "path": "/Settings/SystemSetup/MaxChargeCurrent",
        "serviceObj": {
            "service": "com.victronenergy.settings",
            "name": "com.victronenergy.settings",
            "paths": [
                {
                    "path": "/Settings/CGwacs/AcPowerSetPoint",
                    "type": "float",
                    "name": "ESS control loop setpoint (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/MinimumSocLimit",
                    "type": "float",
                    "name": "ESS Minimum SoC (unless grid fails) (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/BatteryLife/State",
                    "type": "enum",
                    "name": "ESS BatteryLife state",
                    "enum": {
                        "0": "Unused, BL disabled",
                        "1": "Restarting",
                        "2": "Self-consumption",
                        "3": "Self-consumption",
                        "4": "Self-consumption",
                        "5": "Discharge disabled",
                        "6": "Force charge",
                        "7": "Sustain",
                        "8": "Low Soc Recharge",
                        "9": "Keep batteries charged",
                        "10": "BL Disabled",
                        "11": "BL Disabled (Low SoC)",
                        "12": "BL Disabled (Low SOC recharge)"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeCurrent",
                    "type": "float",
                    "name": "DVCC system max charge current (A DC)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/Hub4Mode",
                    "type": "enum",
                    "name": "ESS Mode",
                    "enum": {
                        "1": "ESS with Phase Compensation",
                        "2": "ESS without phase compensation",
                        "3": "Disabled/External Control"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxChargePercentage",
                    "type": "float",
                    "name": "ESS max charge current (fractional) (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePercentage",
                    "type": "float",
                    "name": "ESS max discharge current (fractional) (%)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxDischargePower",
                    "type": "float",
                    "name": "ESS max discharge current (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/MaxFeedInPower",
                    "type": "float",
                    "name": "Maximum System Grid Feed In (W)",
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/OvervoltageFeedIn",
                    "type": "enum",
                    "name": "Feed excess DC-coupled PV into grid",
                    "enum": {
                        "0": "Don’t feed excess DC-tied PV into grid",
                        "1": "Feed excess DC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/CGwacs/PreventFeedback",
                    "type": "enum",
                    "name": "AC-coupled PV - grid feed in excess",
                    "enum": {
                        "0": "Feed excess AC-tied PV into grid",
                        "1": "Don’t feed excess AC-tied PV into the grid"
                    },
                    "writable": true
                },
                {
                    "path": "/Settings/SystemSetup/MaxChargeVoltage",
                    "type": "float",
                    "name": "Limit managed battery voltage (V DC)",
                    "writable": true
                }
            ]
        },
        "pathObj": {
            "path": "/Settings/SystemSetup/MaxChargeCurrent",
            "type": "float",
            "name": "DVCC system max charge current (A DC)",
            "writable": true
        },
        "name": "",
        "x": 1490,
        "y": 1760,
        "wires": []
    },
    {
        "id": "f145ff1584807b9c",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "DVCC charge current limit control",
        "func": "// Battery SOC in %\nvar BatterySOC = global.get(\"BatterySOC\");\n\nif (BatterySOC != null)\n{\n    if (BatterySOC >= 95 )\n    {\n        return {payload:10};\n    }\n    else if(BatterySOC >= 93 && BatterySOC < 95)\n    {\n        return {payload:15};\n    }\n    else if(BatterySOC >= 90 && BatterySOC < 93)\n    {\n        return {payload:20};\n    }\n    else\n    {\n        return {payload:25}; \n    }\n    \n}\nelse return {payload:25};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1760,
        "wires": [
            [
                "c5d74a6260a2d067"
            ]
        ]
    },
    {
        "id": "6162f855c4559a55",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 90,
        "y": 1760,
        "wires": [
            [
                "f145ff1584807b9c"
            ]
        ]
    },
    {
        "id": "c5d74a6260a2d067",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 550,
        "y": 1760,
        "wires": [
            [
                "103fd672c5c67d51",
                "639778e7b0a32101"
            ]
        ]
    },
    {
        "id": "103fd672c5c67d51",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Function2 OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1720,
        "wires": []
    },
    {
        "id": "639778e7b0a32101",
        "type": "trigger",
        "z": "4a5a37c77796c075",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "60",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 770,
        "y": 1760,
        "wires": [
            [
                "cd58976dfc6e5e50"
            ]
        ]
    },
    {
        "id": "b888b5a965806ac9",
        "type": "trigger",
        "z": "4a5a37c77796c075",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "90",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "2000",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 1280,
        "wires": [
            [
                "6e17348990265bf3",
                "1a729234f314dcf8"
            ]
        ]
    },
    {
        "id": "5d1e6b32c49f9f77",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Function1 SYSTEM OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1260,
        "wires": []
    },
    {
        "id": "a137de72178a2945",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Function2 SYSTEM OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1350,
        "y": 1720,
        "wires": []
    },
    {
        "id": "828dfa6e68477e11",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 950,
        "y": 1080,
        "wires": [
            [
                "887213bfa74a7c29"
            ]
        ]
    },
    {
        "id": "58e086d0163e07ab",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "Battery state",
        "func": "global.set(\"BatteryState\",msg.payload);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "6e17348990265bf3",
        "type": "switch",
        "z": "4a5a37c77796c075",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1280,
        "wires": [
            [
                "a9ffe9c77a7d0bf7"
            ]
        ]
    },
    {
        "id": "d41a44159f2a911c",
        "type": "switch",
        "z": "4a5a37c77796c075",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1320,
        "wires": [
            [
                "a9ffe9c77a7d0bf7"
            ]
        ]
    },
    {
        "id": "b49ca7c47459696f",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 570,
        "y": 1320,
        "wires": [
            [
                "d41a44159f2a911c"
            ]
        ]
    },
    {
        "id": "a9ffe9c77a7d0bf7",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1070,
        "y": 1300,
        "wires": [
            [
                "5d1e6b32c49f9f77",
                "ccd9cb5425988fa2"
            ]
        ]
    },
    {
        "id": "88659f50d1a33f0c",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Function1 PRE OUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 1200,
        "wires": []
    },
    {
        "id": "887213bfa74a7c29",
        "type": "trigger",
        "z": "4a5a37c77796c075",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1090,
        "y": 1080,
        "wires": [
            [
                "58e086d0163e07ab",
                "7ef190d018699bdb"
            ]
        ]
    },
    {
        "id": "a9a6385ccfa73933",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "Consumption L1",
        "func": "//global.set(\"ConsumptionL1\",msg.payload);\nglobal.set(\"ConsumptionL1\",msg.result);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "94dea78017859763",
        "type": "buffer-array",
        "z": "4a5a37c77796c075",
        "name": "",
        "bufferLen": "25",
        "startWhenFilled": true,
        "x": 790,
        "y": 580,
        "wires": [
            [
                "aca6e2f990c521c0"
            ]
        ]
    },
    {
        "id": "aca6e2f990c521c0",
        "type": "Data Analysis",
        "z": "4a5a37c77796c075",
        "name": "Average",
        "action": "avg",
        "columns": "",
        "outputs": 2,
        "outliersBase": "avg",
        "outliersStdDevs": "3",
        "term": "5",
        "keyProperty": "msg.topic",
        "dataProperty": "msg.payload",
        "dataProperties": [
            "msg.payload[0]",
            "msg.payload[1]"
        ],
        "x": 940,
        "y": 580,
        "wires": [
            [
                "42c6f9f2316124b8"
            ],
            []
        ]
    },
    {
        "id": "42c6f9f2316124b8",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1090,
        "y": 580,
        "wires": [
            [
                "a9a6385ccfa73933",
                "ab2be4ddf9a8547b"
            ]
        ]
    },
    {
        "id": "a499b2561bb70172",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "Actual gridsetpoint",
        "func": "global.set(\"ActualGridsetpoint\",msg.payload);\n//global.set(\"ActualGridsetpoint\",msg.result);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "644195147549872c",
        "type": "victron-input-system",
        "z": "4a5a37c77796c075",
        "service": "com.victronenergy.system",
        "path": "/Dc/Battery/Power",
        "serviceObj": {
            "service": "com.victronenergy.system",
            "name": "com.victronenergy.system",
            "paths": [
                {
                    "path": "/Ac/ActiveIn/Source",
                    "type": "enum",
                    "name": "AC-Input",
                    "enum": {
                        "0": "Not available",
                        "1": "Grid",
                        "2": "Generator",
                        "3": "Shore",
                        "240": "Inverting"
                    }
                },
                {
                    "path": "/Ac/Consumption/L1/Power",
                    "type": "float",
                    "name": "AC Consumption L1 (W)"
                },
                {
                    "path": "/Ac/Consumption/L2/Power",
                    "type": "float",
                    "name": "AC Consumption L2 (W)"
                },
                {
                    "path": "/Ac/Consumption/L3/Power",
                    "type": "float",
                    "name": "AC Consumption L3 (W)"
                },
                {
                    "path": "/Ac/Genset/DeviceType",
                    "type": "float",
                    "name": "Genset Device Type",
                    "enum": {}
                },
                {
                    "path": "/Ac/Genset/L1/Power",
                    "type": "float",
                    "name": "Genset L1 (W)"
                },
                {
                    "path": "/Ac/Genset/L2/Power",
                    "type": "float",
                    "name": "Genset L2 (W)"
                },
                {
                    "path": "/Ac/Genset/L3/Power",
                    "type": "float",
                    "name": "Genset L3 (W)"
                },
                {
                    "path": "/Ac/Genset/NumberOfPhases",
                    "type": "integer",
                    "name": "Genset Number Of Phases"
                },
                {
                    "path": "/Ac/Grid/DeviceType",
                    "type": "float",
                    "name": "Grid Device Type"
                },
                {
                    "path": "/Ac/Grid/L1/Power",
                    "type": "float",
                    "name": "Grid L1 (W)"
                },
                {
                    "path": "/Ac/Grid/L2/Power",
                    "type": "float",
                    "name": "Grid L2 (W)"
                },
                {
                    "path": "/Ac/Grid/L3/Power",
                    "type": "float",
                    "name": "Grid L3 (W)"
                },
                {
                    "path": "/Ac/Grid/NumberOfPhases",
                    "type": "integer",
                    "name": "Grid Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGenset/L1/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L1"
                },
                {
                    "path": "/Ac/PvOnGenset/L2/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L2"
                },
                {
                    "path": "/Ac/PvOnGenset/L3/Power",
                    "type": "float",
                    "name": "PV Power AC-tied on Generator L3"
                },
                {
                    "path": "/Ac/PvOnGenset/NumberOfPhases",
                    "type": "integer",
                    "name": "PV Power AC-tied on Generator Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnGrid/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L1 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L2 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on input L3 (W)"
                },
                {
                    "path": "/Ac/PvOnGrid/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on input Number Of Phases"
                },
                {
                    "path": "/Ac/PvOnOutput/L1/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L1 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L2/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L2 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/L3/Power",
                    "type": "float",
                    "name": "PV - AC-coupled on output L3 (W)"
                },
                {
                    "path": "/Ac/PvOnOutput/NumberOfPhases",
                    "type": "integer",
                    "name": "PV - AC-coupled on output Number Of Phases"
                },
                {
                    "path": "/Dc/Battery/ConsumedAmphours",
                    "type": "float",
                    "name": "Battery Consumed Amphours (Ah)"
                },
                {
                    "path": "/Dc/Battery/Current",
                    "type": "float",
                    "name": "Battery current (A)"
                },
                {
                    "path": "/Dc/Battery/Power",
                    "type": "float",
                    "name": "Battery Power (W)"
                },
                {
                    "path": "/Dc/Battery/Soc",
                    "type": "float",
                    "name": "Battery State of Charge (%)"
                },
                {
                    "path": "/Dc/Battery/State",
                    "type": "enum",
                    "name": "Battery state",
                    "enum": {
                        "0": "idle",
                        "1": "charging",
                        "2": "discharging"
                    }
                },
                {
                    "path": "/Dc/Battery/Temperature",
                    "type": "float",
                    "name": "Battery temperature (C)"
                },
                {
                    "path": "/Dc/Battery/TimeToGo",
                    "type": "float",
                    "name": "Battery Time to Go (h)"
                },
                {
                    "path": "/Dc/Battery/Voltage",
                    "type": "float",
                    "name": "Battery voltage (V)"
                },
                {
                    "path": "/Dc/Charger/Power",
                    "type": "integer",
                    "name": "AC-Chargers - power (W)"
                },
                {
                    "path": "/Dc/Pv/Current",
                    "type": "float",
                    "name": "MPPTs - current (A)"
                },
                {
                    "path": "/Dc/Pv/Power",
                    "type": "float",
                    "name": "MPPTs - power (W)"
                },
                {
                    "path": "/Dc/System/Power",
                    "type": "float",
                    "name": "DC System (W)"
                },
                {
                    "path": "/Dc/Vebus/Current",
                    "type": "float",
                    "name": "VE.Bus charge current (A)"
                },
                {
                    "path": "/Dc/Vebus/Power",
                    "type": "float",
                    "name": "VE.Bus charge power (W)"
                },
                {
                    "path": "/Serial",
                    "type": "string",
                    "name": "Serial (System)"
                },
                {
                    "path": "/SystemType",
                    "type": "string",
                    "name": "System type"
                },
                {
                    "path": "/Timers/TimeOff",
                    "type": "float",
                    "name": "Time off (s)"
                },
                {
                    "path": "/Timers/TimeOnGenerator",
                    "type": "float",
                    "name": "Time generator (s)"
                },
                {
                    "path": "/Timers/TimeOnGrid",
                    "type": "float",
                    "name": "Time grid (s)"
                },
                {
                    "path": "/Timers/TimeOnInverter",
                    "type": "float",
                    "name": "Time inverting (s)"
                }
            ]
        },
        "pathObj": {
            "path": "/Dc/Battery/Power",
            "type": "float",
            "name": "Battery Power (W)"
        },
        "initial": "",
        "name": "",
        "x": 170,
        "y": 680,
        "wires": [
            [
                "91a76b648d6a0edd"
            ]
        ]
    },
    {
        "id": "fbf2504db424e772",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Battery Power",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "result",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 640,
        "wires": []
    },
    {
        "id": "c23c79706fc6c7e3",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "Battery Power",
        "func": "//global.set(\"ConsumptionL1\",msg.payload);\nglobal.set(\"BatteryPower\",msg.result);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "91a76b648d6a0edd",
        "type": "buffer-array",
        "z": "4a5a37c77796c075",
        "name": "",
        "bufferLen": "20",
        "startWhenFilled": true,
        "x": 790,
        "y": 680,
        "wires": [
            [
                "597f7de86ece4883"
            ]
        ]
    },
    {
        "id": "597f7de86ece4883",
        "type": "Data Analysis",
        "z": "4a5a37c77796c075",
        "name": "median",
        "action": "median",
        "columns": "",
        "outputs": 2,
        "outliersBase": "avg",
        "outliersStdDevs": "3",
        "term": "5",
        "keyProperty": "msg.topic",
        "dataProperty": "msg.payload",
        "dataProperties": [
            "msg.payload[0]",
            "msg.payload[1]"
        ],
        "x": 940,
        "y": 680,
        "wires": [
            [
                "e98b0d9c597c65a7"
            ],
            []
        ]
    },
    {
        "id": "e98b0d9c597c65a7",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1090,
        "y": 680,
        "wires": [
            [
                "c23c79706fc6c7e3",
                "fbf2504db424e772"
            ]
        ]
    },
    {
        "id": "0f4108dd84e1905c",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "Actual max inverter power",
        "func": "global.set(\"ActualMaxInverterPower\",msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "41b863234441d28c",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1090,
        "y": 880,
        "wires": [
            [
                "99b83e7c7e043eea"
            ]
        ]
    },
    {
        "id": "8779777fc2404182",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1090,
        "y": 780,
        "wires": [
            [
                "9a2597470c476c0e"
            ]
        ]
    },
    {
        "id": "22f4ff3599150aa8",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "function 1",
        "func": "var increment = 50;\nvar offset = 50;\nvar BatteryGoal = 60;     // Watts\n\n\n// MPPT power in watts\nvar MPPTpower = msg.payload //global.get(\"MPPTpower\");\n\n\nfunction round(number, increment, offset) \n{\n    //return Math.ceil((number - offset) / increment ) * increment + offset;         // Round up\n    return Math.floor(Math.abs(number - offset) / increment ) * increment + offset;  // Round down\n}\n\nfunction dynamicPowerLimit(MPPTpower, BatteryGoal)\n{\n    var PowerLimit = BatteryGoal + MPPTpower\n\n    return PowerLimit;\n}\n\n\nvar PowerLimit = dynamicPowerLimit(MPPTpower, BatteryGoal);\nvar result = round(PowerLimit, increment, offset);\nmsg.payload = result\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1940,
        "wires": [
            [
                "600932ed4328c0b2"
            ]
        ]
    },
    {
        "id": "43bc38e8317ba844",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 370,
        "y": 1940,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "e4fe9de86d3ef2e6",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Round test",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 1940,
        "wires": []
    },
    {
        "id": "600932ed4328c0b2",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 1940,
        "wires": [
            [
                "e4fe9de86d3ef2e6"
            ]
        ]
    },
    {
        "id": "899448782c679472",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "39",
        "payloadType": "num",
        "x": 370,
        "y": 1980,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "7a9a63756ce8a9b0",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "49",
        "payloadType": "num",
        "x": 370,
        "y": 2020,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "d1d0d9f993f955f4",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "50",
        "payloadType": "num",
        "x": 370,
        "y": 2060,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "2a61efa58328ef30",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "51",
        "payloadType": "num",
        "x": 370,
        "y": 2100,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "f3c0471707e0aea8",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "99",
        "payloadType": "num",
        "x": 370,
        "y": 2140,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "3e0df75717cd92d6",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 370,
        "y": 2180,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "cb5eee5f2bef1871",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "101",
        "payloadType": "num",
        "x": 370,
        "y": 2220,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "37dcd4af9f970f57",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "149",
        "payloadType": "num",
        "x": 370,
        "y": 2260,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "a9ec72dcd9c423ef",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "150",
        "payloadType": "num",
        "x": 370,
        "y": 2300,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "257ae1772c3e0a36",
        "type": "inject",
        "z": "4a5a37c77796c075",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "151",
        "payloadType": "num",
        "x": 370,
        "y": 2340,
        "wires": [
            [
                "22f4ff3599150aa8"
            ]
        ]
    },
    {
        "id": "8dda395300196942",
        "type": "debug",
        "z": "4a5a37c77796c075",
        "name": "Grid setpoint test",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1360,
        "wires": []
    },
    {
        "id": "79510c5bf32bcceb",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 570,
        "y": 1400,
        "wires": [
            [
                "a8321668d7816706"
            ]
        ]
    },
    {
        "id": "a8321668d7816706",
        "type": "trigger",
        "z": "4a5a37c77796c075",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "pay",
        "op2type": "payl",
        "duration": "40",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 750,
        "y": 1400,
        "wires": [
            [
                "0656058d80277ea6"
            ]
        ]
    },
    {
        "id": "cd58976dfc6e5e50",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1070,
        "y": 1760,
        "wires": [
            [
                "a95e38f44c913a8b",
                "a137de72178a2945"
            ]
        ]
    },
    {
        "id": "0656058d80277ea6",
        "type": "rbe",
        "z": "4a5a37c77796c075",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1070,
        "y": 1400,
        "wires": [
            [
                "bdc3cb68faaa2efc",
                "8dda395300196942"
            ]
        ]
    },
    {
        "id": "f987a897691a56ae",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "Inverter power limit control",
        "func": "var SolarOperationMode = global.get(\"SolarOperationMode\");     // 0-Off  1-Voltage or current limited  2-MPPT Tracker active 255- Not available\nvar MultiPlusActiveInput = global.get(\"MultiPlusActiveInput\"); // 0-AC Input 1  1-AC Input 2  240-Disconnected\nvar MPPTpower = global.get(\"MPPTpower\");                       // MPPT power in watts\n//var BatterySOC = global.get(\"BatterySOC\");                     // Battery SOC in %\n//var BatteryState = global.get(\"BatteryState\");                 // 0-Idle  1-Charging  2-Discharging\nvar ActualGridsetpoint = global.get(\"ActualGridsetpoint\");     // ActualGridsetpoint in watts\nvar ConsumptionL1 = global.get(\"ConsumptionL1\");               // ConsumptionL1 in watts\n\nvar increment = 50;\nvar offset = 50;\nvar BatteryGoal = 40;                                            // Watts\n\n\nfunction round(number, increment, offset) \n{\n    //return Math.ceil((number - offset) / increment ) * increment + offset;         // Round up\n    return Math.floor(Math.abs(number - offset) / increment ) * increment + offset;  // Round down\n}\n\nfunction dynamicPowerLimit(MPPTpower, BatteryGoal)\n{\n    var PowerLimit = BatteryGoal + MPPTpower\n\n    return PowerLimit;\n}\n\n\n\nif (SolarOperationMode != null && MultiPlusActiveInput != null) // If input data NOT NULL\n{\n    if (MultiPlusActiveInput == 240)                            // If no ACin\n    {\n        return [{payload:2000},{payload:1000},{payload:50}];\n    }\n    else                                                        // If Acin is OK\n    {\n        if (SolarOperationMode == 0 || MPPTpower < 30 )                            // If SolarCharger OFF or MPPTpower < 30\n        {\n            return [{payload:50},null,{payload:50}];\n        }\n        else if(SolarOperationMode == 1 & MPPTpower >= 30)                        // If SolarCharger LIMIT\n        {\n            return [{payload:1000},null,{payload:30}];\n        }\n        else if(SolarOperationMode == 2 & MPPTpower >= 30)                        // If SolarCharger NO LIMIT\n        {\n            var ACload = ConsumptionL1 - ActualGridsetpoint\n            var DynamicLimit = dynamicPowerLimit(MPPTpower, BatteryGoal)\n            var result = round(DynamicLimit, increment, offset)\n            \n            if (DynamicLimit < ACload)                          // If Inverter power limit is less than ACloads\n            {\n                return [{payload:result},null,{payload:50}];\n            }\n            else\n            {\n                return [{payload:1000},null,{payload:50}];\n            }\n        }\n        else                                                    // If Solar charger NOT CONNECTED\n        {\n            return [{payload:1000},null,{payload:50}]; \n        }\n    }\n}\nelse return [null,{payload:1000},{payload:50}];                              // If input data IS null\n",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "8d99f6a41dbd6fff",
        "type": "function",
        "z": "4a5a37c77796c075",
        "name": "ESS grid set point control",
        "func": "var SolarOperationMode = global.get(\"SolarOperationMode\");     // 0-Off  1-Voltage or current limited  2-MPPT Tracker active 255- Not available\nvar MultiPlusActiveInput = global.get(\"MultiPlusActiveInput\"); // 0-AC Input 1  1-AC Input 2  240-Disconnected\nvar MPPTpower = global.get(\"MPPTpower\");                       // MPPT power in watts\n//var BatterySOC = global.get(\"BatterySOC\");                     // Battery SOC in %\n//var BatteryState = global.get(\"BatteryState\");                 // 0-Idle  1-Charging  2-Discharging\nvar ActualGridsetpoint = global.get(\"ActualGridsetpoint\");     // ActualGridsetpoint in watts\nvar ConsumptionL1 = global.get(\"ConsumptionL1\");               // ConsumptionL1 in watts\n\nvar ACload = ConsumptionL1 - ActualGridsetpoint\n\n//if(SolarOperationMode == 1 & MPPTpower >= 30)\n\nif(ConsumptionL1 <= 100)\n{\n    return [{payload:20}];\n}\nelse\n{\n    return [{payload:50}];\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1400,
        "wires": [
            [
                "79510c5bf32bcceb"
            ]
        ]
    }
]